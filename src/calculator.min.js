class e{constructor(e,t,r){this.year=e,this.month=t,this.timestamp=r}getYMString(){let e="";return 0!==this.year&&(e+=this.year+"年"),0!==this.month&&(e+=this.month+"月"),""!=e&&(e+="+"),e}toString(){return this.getYMString()+this.timestamp+"ms"}}function t(e){return e instanceof Date&&!isNaN(e)}function r(t){return t instanceof e}const n={formatToDisplayString:e=>r(e)?{value:e.toString(),info:"时间间隔："+n.formatDateStamp(e)}:t(e)?{value:e.getTime(),info:"时间戳对应日期："+n.formatDate(e)}:e,add(n,i){if("string"==typeof n||"string"==typeof i)return n.toString()+i.toString();if("bigint"==typeof n||"bigint"==typeof i)return BigInt(n)+BigInt(i);if(r(n)&&r(i))return new e(n.year+i.year,n.month+i.month,n.timestamp+i.timestamp);if(t(n)&&r(i)){const e=new Date(n);return e.setFullYear(e.getFullYear()+i.year),e.setMonth(e.getMonth()+i.month),e.setMilliseconds(e.getMilliseconds()+i.timestamp),e}if(t(i)&&r(n)){const e=new Date(i);return e.setFullYear(e.getFullYear()+n.year),e.setMonth(e.getMonth()+n.month),e.setMilliseconds(e.getMilliseconds()+n.timestamp),e}if(t(n)&&t(i))throw new Error("两个日期类型不能相加");if(typeof n!=typeof i)throw new Error(`参数类型不一致: ${typeof n} 和 ${typeof i}`);return n+i},subtract(n,i){if(console.log(typeof n,typeof i),"bigint"==typeof n||"bigint"==typeof i)return BigInt(n)-BigInt(i);if(r(n)){if(r(i))return new e(n.year-i.year,n.month-i.month,n.timestamp-i.timestamp);throw t(i)?new Error("时间戳不能减去日期 "):new Error("不支持的时间戳减法")}if(t(n)){if(r(i)){const e=new Date(n);return e.setFullYear(e.getFullYear()-i.year),e.setMonth(e.getMonth()-i.month),e.setMilliseconds(e.getMilliseconds()-i.timestamp),e}if(t(i)){const t=n.getTime()-i.getTime();return new e(0,0,t)}throw new Error("不支持的日期减法")}if(typeof n!=typeof i)throw new Error(`参数类型不一致: ${typeof n} 和 ${typeof i}`);return n-i},multiply:(e,t)=>"bigint"==typeof e||"bigint"==typeof t?BigInt(e)*BigInt(t):e*t,divide(e,t){if(0===t||0n===t)throw new Error("除数不能为零");if("bigint"==typeof e||"bigint"==typeof t){if(0n!==BigInt(e)%BigInt(t))throw new Error("大数除法暂不支持, 请使用整除(//)运算符");return BigInt(e)/BigInt(t)}return e/t},floorDivide:(e,t)=>"bigint"==typeof e||"bigint"==typeof t?BigInt(e)/BigInt(t):Math.floor(e/t),mod:(e,t)=>"bigint"==typeof e||"bigint"==typeof t?BigInt(e)%BigInt(t):e%t,pow:(e,t)=>Math.pow(e.toString(),t.toString()),toNumber(e){if("number"==typeof e)return e;if("bigint"==typeof e)return e>Number.MAX_SAFE_INTEGER||e<Number.MIN_SAFE_INTEGER?e:Number(e);if("string"==typeof e){if(!e.trim())throw new Error("空字符串无法转换为数字");if(e.startsWith("0x")||e.startsWith("0b")||e.startsWith("0o"))return BigInt(e);if(e.length>10&&!e.includes("."))return BigInt(e);if(e.includes("e")||e.includes("E")){if(!/^-?\d*\.?\d*[eE][+-]?\d+$/.test(e))throw new Error(`无效的科学计数法格式: ${e}`);const t=parseFloat(e);if(!isNaN(t))return t}if(!/^-?\d+(\.\d+)?$/.test(e))throw new Error(`无效的数字格式: ${e}`);if(e.includes("."))return Number(e);const t=Number(e);if(!isNaN(t))return Number.isInteger(t)&&Math.abs(t)<=Number.MAX_SAFE_INTEGER?parseInt(e,10):t}throw new Error(`无法将 ${e} 转换为数字类型`)},toString(e,t=6){if("bigint"==typeof e)return e<=Number.MAX_SAFE_INTEGER&&e>=Number.MIN_SAFE_INTEGER?Number(e).toString():e.toString();if("number"==typeof e){if(!Number.isFinite(e))return e.toString();if(Math.abs(e)>=1e21)return e.toExponential(t);if(Number.isInteger(e))return e.toString();const r=Number(e.toFixed(t));return Number.isInteger(r)?r.toString():r.toString().replace(/\.?0+$/,"")}return String(e)},radianToPi(e){const t=e/Math.PI;if(Number.isInteger(t))return 1===t?"PI":-1===t?"-PI":`${t}*PI`;const r=[2,3,4,6,8,12];for(const e of r){const r=t*e;if(Math.abs(Math.round(r)-r)<1e-10){const t=Math.round(r);return 1===Math.abs(t)?t>0?`PI/${e}`:`-PI/${e}`:`${t}*PI/${e}`}}return`${t.toFixed(6)}*PI`},radianToDeg(e){let t=180*e/Math.PI;return t%=360,t<0&&(t+=360),t},dateToTimestamp(e){const t=new Date(e);if(isNaN(t.getTime()))throw new Error(`无法将${e}转成日期`);return t.getTime()},formatDate(e){if(r(e))throw new Error('无法将时间间隔转成日期, 请使用"> #"');const t=new Date(e);if(isNaN(t.getTime()))throw new Error(`无法将${e}转成日期`);const n=t.getFullYear(),i=t.getMonth()+1,o=t.getDate(),s=t.getHours(),a=t.getMinutes(),c=t.getSeconds();return 0===s&&0===a&&0===c?`${n}-${i.toString().padStart(2,"0")}-${o.toString().padStart(2,"0")}`:`${n}-${i.toString().padStart(2,"0")}-${o.toString().padStart(2,"0")} ${s.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}:${c.toString().padStart(2,"0")}`},formatDateStamp(e){if(!r(e))throw new Error('"> #"只能可视化时间间隔类型');const t=e.timestamp,n=Math.abs(t),i=Math.floor(n/1e3%60),o=Math.floor(n/6e4%60),s=Math.floor(n/36e5%24),a=`${t<0?"-":""}${Math.floor(n/864e5)}天 ${s}小时 ${o}分钟 ${i}秒`;return e.getYMString()+a},formatDateStamp2Week(e){if(!r(e))throw new Error('"> #w"只能可视化时间间隔类型');const t=(e.timestamp/6048e5).toFixed(2)+"周";return e.getYMString()+t},formatDateStamp2Day(e){if(!r(e))throw new Error('"> #d"只能可视化时间间隔类型');const t=(e.timestamp/864e5).toFixed(2)+"天";return e.getYMString()+t},formatDateStamp2Hour(e){if(!r(e))throw new Error('"> #h"只能可视化时间间隔类型');const t=(e.timestamp/36e5).toFixed(2)+"小时";return e.getYMString()+t},formatDateStamp2Minute(e){if(!r(e))throw new Error('"> #m"只能可视化时间间隔类型');const t=(e.timestamp/6e4).toFixed(2)+"分钟";return e.getYMString()+t},formatDateStamp2Second(e){if(!r(e))throw new Error('"> #s"只能可视化时间间隔类型');const t=(e.timestamp/1e3).toFixed(2)+"秒";return e.getYMString()+t}},i={"π":Math.PI,PI:Math.PI,pi:Math.PI,e:Math.E,E:Math.E},o={"(":{description:"左括号"},")":{description:"右括号"}},s={",":{description:"参数分隔符"}},a={"+":{precedence:2,args:2,func:n.add,acceptAny:!0,position:"infix",description:"加法"},"-":{precedence:2,args:2,func:n.subtract,acceptAny:!0,position:"infix",description:"减法"},"*":{precedence:4,args:2,func:n.multiply,position:"infix",description:"乘法"},"/":{precedence:4,args:2,func:n.divide,position:"infix",description:"除法"},"//":{precedence:4,args:2,func:n.floorDivide,position:"infix",description:"整除"},"%":{precedence:4,args:2,func:n.mod,position:"infix",description:"取模"},"**":{precedence:7,args:2,func:n.pow,position:"infix",description:"幂运算"},"°":{alias:".rad",description:"角度转弧度"},"unary-":{precedence:5,args:1,func:e=>-e,position:"prefix",description:"负号"},"unary+":{precedence:5,args:1,func:e=>+e,position:"prefix",description:"正号"},"unary%":{precedence:5,args:1,func:e=>.01*e,position:"postfix",preventSelfReference:!0,description:"百分号"},"‰":{precedence:5,args:1,func:e=>.001*e,position:"postfix",preventSelfReference:!0,description:"千分号"},"&":{precedence:1,args:2,func:(e,t)=>e&t,position:"infix",description:"按位与"},and:{alias:"&",description:"按位与"},"|":{precedence:1,args:2,func:(e,t)=>e|t,position:"infix",description:"按位或"},or:{alias:"|",description:"按位或"},"^":{precedence:1,args:2,func:(e,t)=>e^t,position:"infix",description:"按位异或"},"~":{precedence:6,args:1,func:e=>~e,position:"prefix",description:"按位取反"},not:{alias:"~",description:"按位取反"},"<<":{precedence:3,args:2,func:(e,t)=>"bigint"==typeof e||"bigint"==typeof t?BigInt(e)<<BigInt(t):e<<t,position:"infix",description:"左移"},">>":{precedence:3,args:2,func:(e,t)=>"bigint"==typeof e||"bigint"==typeof t?BigInt(e)>>BigInt(t):e>>t,position:"infix",description:"右移"},">>>":{precedence:3,args:2,func:(e,t)=>"bigint"==typeof e||"bigint"==typeof t?BigInt(e)>>>BigInt(t):e>>>t,position:"infix",description:"无符号右移"},"=":{precedence:0,args:2,func:(e,t)=>t,position:"infix",acceptAny:!0,isCompoundAssignment:!0,description:"赋值"},"+=":{precedence:0,args:2,func:(e,t)=>n.toNumber(e)+n.toNumber(t),position:"infix",description:"加法赋值",isCompoundAssignment:!0},"-=":{precedence:0,args:2,func:(e,t)=>n.toNumber(e)-n.toNumber(t),position:"infix",description:"减法赋值",isCompoundAssignment:!0},"*=":{precedence:0,args:2,func:(e,t)=>n.toNumber(e)*n.toNumber(t),position:"infix",description:"乘法赋值",isCompoundAssignment:!0},"/=":{precedence:0,args:2,func:(e,t)=>{const r=n.toNumber(t);if(0===r)throw new Error("除数不能为零");return n.toNumber(e)/r},position:"infix",description:"除法赋值",isCompoundAssignment:!0},"&=":{precedence:0,args:2,func:(e,t)=>e&t,position:"infix",description:"按位与赋值",isCompoundAssignment:!0},"|=":{precedence:0,args:2,func:(e,t)=>e|t,position:"infix",description:"按位或赋值",isCompoundAssignment:!0},"^=":{precedence:0,args:2,func:(e,t)=>e^t,position:"infix",description:"按位异或赋值",isCompoundAssignment:!0},"<<=":{precedence:0,args:2,func:(e,t)=>e<<t,position:"infix",description:"左移赋值",isCompoundAssignment:!0},">>=":{precedence:0,args:2,func:(e,t)=>e>>t,position:"infix",description:"右移赋值",isCompoundAssignment:!0},">>>=":{precedence:0,args:2,func:(e,t)=>e>>>t,position:"infix",description:"无符号右移赋值",isCompoundAssignment:!0},"@":{precedence:1,args:1,func:n.dateToTimestamp,position:"prefix",acceptAny:!0,description:"日期转时间戳"},">@":{precedence:0,args:1,func:n.formatDate,position:"postfix",acceptAny:!0,description:"时间戳可视化成日期"},">#":{precedence:0,args:1,func:n.formatDateStamp,position:"postfix",acceptAny:!0,description:"时间差可视化"},">#w":{precedence:0,args:1,func:n.formatDateStamp2Week,position:"postfix",acceptAny:!0,description:"时间差转成周数"},">#W":{alias:">#w",description:"时间差转成周数"},">#d":{precedence:0,args:1,func:n.formatDateStamp2Day,position:"postfix",acceptAny:!0,description:"时间差转成天数"},">#D":{alias:">#d",description:"时间差转成天数"},">#h":{precedence:0,args:1,func:n.formatDateStamp2Hour,position:"postfix",acceptAny:!0,description:"时间差转成小时数"},">#H":{alias:">#h",description:"时间差转成小时数"},">#m":{precedence:0,args:1,func:n.formatDateStamp2Minute,position:"postfix",acceptAny:!0,description:"时间差转成分钟数"},">#M":{alias:">#m",description:"时间差转成分钟数"},">#s":{precedence:0,args:1,func:n.formatDateStamp2Second,position:"postfix",acceptAny:!0,description:"时间差转成秒数"},">#S":{alias:">#s",description:"时间差转成秒数"}},c={str:{func:e=>e.toString(),args:1,acceptAny:!0,description:"转换为字符串"},num:{func:e=>e,args:1,description:"转换为数字"},max:{func:Math.max,args:-1,description:"求最大值"},min:{func:Math.min,args:-1,description:"求最小值"},lg:{func:e=>"bigint"==typeof e?Math.log10(Number(e.toString())):Math.log10(e),args:1,description:"以10为底的对数"},lb:{func:e=>"bigint"==typeof e?Math.log2(Number(e.toString())):Math.log2(e),args:1,description:"以2为底的对数"},log:{func:(e,t)=>{if(e<=0||t<=0)throw new Error("对数底数和真数必须为正数");return"bigint"==typeof e||"bigint"==typeof t?Math.log(Number(t.toString()))/Math.log(Number(e.toString())):Math.log(t)/Math.log(e)},args:2,description:"以x为底的y对数"},ln:{func:e=>"bigint"==typeof e?Math.log(Number(e.toString())):Math.log(e),args:1,description:"自然对数"},exp:{func:Math.exp,args:1,description:"e的指数"},sin:{func:e=>Math.sin(e.toString()),args:1,description:"正弦函数"},cos:{func:e=>Math.cos(e.toString()),args:1,description:"余弦函数"},tan:{func:e=>Math.tan(e.toString()),args:1,description:"正切函数"},asin:{func:e=>Math.asin(e.toString()),args:1,repr:e=>"弧度: "+n.radianToPi(e)+" | 角度: "+n.radianToDeg(e).toFixed(3)+"°",description:"反正弦函数"},acos:{func:e=>Math.acos(e.toString()),args:1,repr:e=>"弧度: "+n.radianToPi(e)+" | 角度: "+n.radianToDeg(e).toFixed(3)+"°",description:"反余弦函数"},atan:{func:e=>Math.atan(e.toString()),args:1,repr:e=>"弧度: "+n.radianToPi(e)+" | 角度: "+n.radianToDeg(e).toFixed(3)+"°",description:"反正切函数"},sinh:{func:e=>Math.sinh(e.toString()),args:1,description:"双曲正弦"},cosh:{func:e=>Math.cosh(e.toString()),args:1,description:"双曲余弦"},tanh:{func:e=>Math.tanh(e.toString()),args:1,description:"双曲正切"},sqrt:{func:e=>Math.sqrt(e.toString()),args:1,description:"平方根"},pow:{func:(e,t)=>Math.pow(e.toString(),t.toString()),args:2,description:"幂函数"},abs:{args:1,func:e=>Math.abs(e.toString()),asProperty:!0,description:"绝对值"},rad:{args:1,func:e=>e*i.PI/180,asProperty:!0,preventSelfReference:!0,repr:e=>"弧度: "+n.radianToPi(e)+" | 角度: "+n.radianToDeg(e).toFixed(3)+"°",description:"度数转换为弧度"},deg:{args:1,func:n.radianToDeg,asProperty:!0,preventSelfReference:!0,repr:e=>"角度: "+e.toFixed(3)+"°",description:"弧度转换为度数"},upper:{args:1,func:e=>e.toUpperCase(),acceptAny:!0,asProperty:!0,description:"转换为大写"},lower:{args:1,func:e=>e.toLowerCase(),acceptAny:!0,asProperty:!0,description:"转换为小写"},length:{args:1,func:e=>e.length,acceptAny:!0,asProperty:!0,description:"字符串长度"},bin:{args:1,func:e=>"0b"+BigInt(e).toString(2),asProperty:!0,description:"十进制转二进制"},oct:{args:1,func:e=>"0o"+BigInt(e).toString(8),asProperty:!0,description:"十进制转八进制"},hex:{args:1,func:e=>"0x"+BigInt(e).toString(16),asProperty:!0,description:"十进制转十六进制"},base64:{args:1,func:e=>{try{return"string"!=typeof e&&(e=String(e)),btoa(e)}catch(e){throw new Error("Base64编码失败: "+e.message)}},description:"Base64编码",acceptAny:!0,asProperty:!0},unbase64:{args:1,func:e=>{try{return"string"!=typeof e&&(e=String(e)),atob(e)}catch(e){throw new Error("Base64解码失败: "+e.message)}},description:"Base64解码",acceptAny:!0,asProperty:!0},timestamp:{args:8,func:(t=0,r=0,n=0,i=0,o=0,s=0,a=0,c=0)=>{const p=Number(t),f=Number(r);if(!Number.isInteger(p)||!Number.isInteger(f))throw new Error(`年:${p} 月:${f} 必须是整数`);return new e(p,f,1e3*(60*(60*(24*(7*n+i)+o)+s)+a)+c)},description:"时间间隔转换为时间戳"}},p=new Map;function f(t,r){const n=new Date;let i;switch(r){case"now":i=n;break;case"today":i=new Date(n.getFullYear(),n.getMonth(),n.getDate());break;case"YYYY-MM-DD HH:mm:ss":i=new Date(t);break;case"YYYY-MM-DD HH:mm":i=new Date(t+":00");break;case"YYYY-MM-DD":i=new Date(t+"T00:00:00");break;case"MM-DD HH:mm:ss":t=t.replace(/^(\d{1,2})-(\d{1,2})/,((e,t,r)=>`${t.padStart(2,"0")}-${r.padStart(2,"0")}`)),i=new Date(n.getFullYear()+"-"+t);break;case"MM-DD HH:mm":t=t.replace(/^(\d{1,2})-(\d{1,2})/,((e,t,r)=>`${t.padStart(2,"0")}-${r.padStart(2,"0")}`)),i=new Date(n.getFullYear()+"-"+t+":00");break;case"YYYY-MM":i=new Date(t+"-01T00:00:00");break;case"MM-DD":t=t.replace(/(\d{1,2})-(\d{1,2})/,((e,t,r)=>`${t.padStart(2,"0")}-${r.padStart(2,"0")}`)),i=new Date(n.getFullYear()+"-"+t+"T00:00:00");break;case"YYYY":i=new Date(t+"-01-01T00:00:00");break;case"HH:mm:ss":{const[r,n,o]=t.split(":").map(Number);return i=new Date(0),i.setUTCHours(r,n,o),new e(0,0,i.getTime())}case"HH:mm":{const[r,n]=t.split(":").map(Number);return i=new Date(0),i.setUTCHours(r,n,0),new e(0,0,i.getTime())}default:return null}return isNaN(i.getTime())?null:i}const u=function(){const e=100,t=new Map,r=[],u=[];function g(e){r.includes(e)||r.push(e)}function d(e){u.includes(e)||u.push(e)}function l(){r.length=0,u.length=0}function m(r,n,i,o){const s=function(e){const t={"（":"(","）":")","，":",","”":'"',"’":"'","【":"[","】":"]","《":"<","》":">","＋":"+","－":"-","＝":"=","÷":"/","。":".","［":"[","］":"]","｛":"{","｝":"}","１":"1","２":"2","３":"3","４":"4","５":"5","６":"6","７":"7","８":"8","９":"9","０":"0"},r=new RegExp(Object.keys(t).join("|"),"g");return e.replace(r,(e=>t[e]||e))}(r);s!==r&&g(`格式化: "${s}"`),r=s,p.clear(),console.log("processDate 1: ",r),r=function(e){let t=0;const r=[{regex:/(@)\s*(\d{4})-(\d{1,2})-(\d{1,2})\s+(\d{1,2}):(\d{1,2}):(\d{1,2})/,format:"YYYY-MM-DD HH:mm:ss",extract:e=>`${e[2]}-${e[3].padStart(2,"0")}-${e[4].padStart(2,"0")} ${e[5]}:${e[6]}:${e[7]}`},{regex:/(@)\s*(\d{4})-(\d{1,2})-(\d{1,2})\s+(\d{1,2}):(\d{1,2})/,format:"YYYY-MM-DD HH:mm",extract:e=>`${e[2]}-${e[3].padStart(2,"0")}-${e[4].padStart(2,"0")} ${e[5]}:${e[6]}`},{regex:/(@)\s*(\d{4})-(\d{1,2})-(\d{1,2})/,format:"YYYY-MM-DD",extract:e=>`${e[2]}-${e[3].padStart(2,"0")}-${e[4].padStart(2,"0")}`},{regex:/(@)\s*(\d{1,2})-(\d{1,2})\s+(\d{1,2}):(\d{1,2}):(\d{1,2})/,format:"MM-DD HH:mm:ss",extract:e=>`${e[2].padStart(2,"0")}-${e[3].padStart(2,"0")} ${e[4]}:${e[5]}:${e[6]}`},{regex:/(@)\s*(\d{1,2})-(\d{1,2})\s+(\d{1,2}):(\d{1,2})/,format:"MM-DD HH:mm",extract:e=>`${e[2].padStart(2,"0")}-${e[3].padStart(2,"0")} ${e[4]}:${e[5]}`},{regex:/(@)\s*(\d{4})-(\d{1,2})/,format:"YYYY-MM",extract:e=>`${e[2]}-${e[3].padStart(2,"0")}`},{regex:/(#)\s*(\d{1,2}):(\d{1,2}):(\d{1,2})/,format:"HH:mm:ss",extract:e=>`${e[2].padStart(2,"0")}:${e[3].padStart(2,"0")}:${e[4].padStart(2,"0")}`},{regex:/(#)\s*(\d{1,2}):(\d{1,2})/,format:"HH:mm",extract:e=>`${e[2].padStart(2,"0")}:${e[3].padStart(2,"0")}`},{regex:/(@)\s*(\d{1,2})-(\d{1,2})/,format:"MM-DD",extract:e=>`${e[2].padStart(2,"0")}-${e[3].padStart(2,"0")}`},{regex:/(@)\s*(\d{4})/,format:"YYYY",extract:e=>e[2]},{regex:/(@)\s*(now)/,format:"now",extract:e=>e[2]},{regex:/(@)\s*(today)/,format:"today",extract:e=>e[2]}];let n;do{n=e;for(const{regex:n,format:i,extract:o}of r){const r=n.exec(e);if(r){const n=f(o(r),i);if(n){const i="_cc_date_i"+t++;p.set(i,n),e=e.substring(0,r.index)+i+e.substring(r.index+r[0].length);break}}}}while(e!==n);return e}(r),console.log("processDate 2: ",r),console.log("processTimestamp 1: ",r),r=function(e){function t(e){const t=["years?","y","months?","m","weeks?","w","days?","d","hours?","h","minutes?","mm","seconds?","s","milliseconds?","ms"].join("|"),r=new RegExp(`([+-]?\\d+\\.?\\d*)(${t})`,"gi");return e.replace(r,"($1)$2")}function r(e){if(console.log("输入:",e),""===e.trim())return e;const t={years:["y","year","years"],months:["m","month","months"],weeks:["w","week","weeks"],days:["d","day","days"],hours:["h","hour","hours"],minutes:["mm","minute","minutes"],seconds:["s","second","seconds"],milliseconds:["ms","millisecond","milliseconds"]},r="START",n="EXPECT_OPEN",i="IN_BRACKETS",o="EXPECT_UNIT",s="END";let a=r,c=0,p="",f=0,u={years:"0",months:"0",weeks:"0",days:"0",hours:"0",minutes:"0",seconds:"0",milliseconds:"0"},g=Object.keys(t),d=0;const l={y:["years","year","y"],m:["milliseconds","millisecond","minutes","months","minute","month","mins","min","mm","ms","m"],w:["weeks","week","w"],d:["days","day","d"],h:["hours","hour","h"],s:["seconds","second","s"]};for(;c<e.length&&a!==s;){const m=e[c];switch(a){case r:if("("===m)a=i,f=1,p="";else if(m.trim())throw l[m]?new Error(`时间单位:${e.slice(c,c+5)+"..."} 没有值`):new Error("时间值必须在括号内");break;case n:"("===m?(a=i,f=1,p=""):m.trim()&&"+"!==m&&"-"!==m&&(0===d&&(d=c),a=s);break;case i:if("("===m)f++,p+=m;else if(")"===m)if(f--,0===f){if(!p.trim())throw new Error("括号内不能为空");a=o}else p+=m;else p+=m;break;case o:let h=c,w={length:0,unitKey:"",value:p,endPos:c};const y=e[c].toLowerCase();if(l[y]){const r=l[y];for(const n of r)if(e.slice(c,c+n.length).toLowerCase()===n){let e;for(const[r,i]of Object.entries(t))if(i.includes(n)){if("0"!==u[r])throw new Error(`时间单位:${r} 重复赋值`);e=r;break}if(e){w={length:n.length,unitKey:e,value:p,endPos:c+n.length-1},c+=n.length-1;break}}}w.length>0?(u[w.unitKey]=w.value,c=w.endPos,d=c+1,g.indexOf(w.unitKey),a=n):(c=h,a=n)}c++}let m=`timestamp(${[u.years||"0",u.months||"0",u.weeks||"0",u.days||"0",u.hours||"0",u.minutes||"0",u.seconds||"0",u.milliseconds||"0"].join(", ")})`;if(d<e.length){const t=e.substring(d).trim();t&&(m+=" "+t)}return console.log("输出:",m),m}const n=(e=e.replace(/>\s*#/g,">timestamp")).split("#");console.log("timeStrs:",n);let i=n[0];for(let e=1;e<n.length;e++){console.log("输入:",n[e]);const o=t(n[e]);console.log("Normalize 输出:",o),i+=r(o)}return i=i.replace(/>timestamp/g,">#"),i}(r),console.log("processTimestamp 2: ",r),r=(r=function(e){let t=0,r=e.replace(/str\s*\(((?:[^)(]|\([^)(]*\))*)\)/g,((e,r)=>{const n="_cc_str_i"+t++;return p.set(n,r.trim()),n}));if(r=r.replace(/(['"`])((?:\\.|[^\\])*?)\1/g,((e,r,n)=>{const i="_cc_str_i"+t++,o=n.replace(/\\(['"\\`])/g,"$1");return p.set(i,o),i})),/['"`][^'"`]*$/.test(r))throw new Error("未闭合的字符串字面量");return r}(r)).replace(/\s/g,"");for(const[e,r]of p)t.set(e,r);!function(e,t=1e3){const r=e.replace(/'[^']*'|"[^"]*"/g,""),n=[];let i=0;for(let e=0;e<r.length;e++)if("("===r[e]){if(n.push(e),i=Math.max(i,n.length),i>t)throw new Error("括号嵌套深度过大")}else if(")"===r[e]){if(0===n.length)throw new Error(`多余的右括号，位置: ${e}`);const t=n.pop();if(e-t>1e3)throw new Error(`括号内容过长，开始位置: ${t}`)}if(n.length>0){const e=n.join(", ");throw new Error(`缺少右括号，对应左括号位置: ${e}`)}const o=[{pattern:/\)[\w\d]/,message:"右括号后直接跟标识符"},{pattern:/\)\(/,message:"右括号后直接跟左括号"},{pattern:/,\s*\)/,message:"逗号后直接跟右括号"},{pattern:/\(\s*,/,message:"左括号后直接跟逗号"},{pattern:/\(\s*\)(?!\s*[.,)\]}])/,message:"独立的空括号对"}];for(const{pattern:e,message:t}of o)if(e.test(r))throw new Error(`括号使用错误: ${t}`)}(r,e);for(const[e,t]of Object.entries(c))t.asProperty&&(n.add("."+e),a["."+e]={precedence:8,args:1,func:t.func,position:"postfix",...t.acceptAny&&{acceptAny:!0},...t.repr&&{repr:t.repr},...t.preventSelfReference&&{preventSelfReference:t.preventSelfReference}});return{expr:r,operators:new Set([...n].sort(((e,t)=>t.length-e.length)))}}function h(e,r,n,i){function p(){if(0===u.length)return!0;const[e,t]=u[u.length-1];return"%"!==t&&"‰"!==t&&!("string"===e||"constant"===e||"delimiter"===e&&")"===t||"function"===e||"identifier"===e||"operator"===e&&t.startsWith("."))}function f(){let t="";for(;d<e.length;){const r=e[d],o=t+r;if("0"===t&&("x"===r||"b"===r||"o"===r)){t+=r,d++;continue}if(/^\d+\.?\d*$/.test(t)&&("e"===r||"E"===r)){for(t+=r,d++,d<e.length&&("+"===e[d]||"-"===e[d])&&(t+=e[d],d++);d<e.length&&/\d/.test(e[d]);)t+=e[d],d++;continue}if(l.has(r)||m.has(r))break;const s=h.some((t=>e.startsWith(t,d))),a=[...n,...i].some((e=>e.startsWith(o)));if(s&&!a)break;t+=r,d++}return t}const u=[];let d=0;const l=new Set(Object.keys(o)),m=new Set(Object.keys(s)),h=[...r].sort(((e,t)=>t.length-e.length));for(;d<e.length;){const t=e[d],r=e.slice(d);let o=!1;for(const e of h)if(r.startsWith(e)){("="===e||a[e].isCompoundAssignment)&&u.length>0&&"string"===u[u.length-1][0]&&(u[u.length-1][0]="identifier"),"+"===e?p()?u.push(["operator","unary+"]):u.push(["operator","+"]):"-"===e?p()?u.push(["operator","unary-"]):u.push(["operator","-"]):"%"===e?u.push(["operator","%"]):m.has(e)?u.push(["separator",e]):l.has(e)?u.push(["delimiter",e]):a[e]&&a[e].alias?u.push(["operator",a[e].alias]):u.push(["operator",e]),d+=e.length,o=!0;break}if(!o)if(m.has(t))u.push(["separator",t]),d++;else if(l.has(t))u.push(["delimiter",t]),d++;else{const e=f();e&&(n.has(e)?c[e]&&c[e].alias?u.push(["function",c[e].alias]):u.push(["function",e]):i.has(e)?u.push(["constant",e]):u.push(["string",e]))}}const w=function(e){if(!e.some((e=>("identifier"===e[0]||"string"===e[0])&&"x"===e[1]))&&!t.has("x"))for(let r=0;r<e.length;r++)if("string"===e[r][0]){if(e[r][1].startsWith("0x"))continue;if(t.has(e[r][1]))continue;const n=e[r][1].split("x");if(n.length>1){const t=[];for(let e=0;e<n.length;e++)n[e]&&(i.has(n[e])?t.push(["constant",n[e]]):t.push(["string",n[e]])),e<n.length-1&&(t.push(["operator","*"]),g("使用x作为乘法符号"));e.splice(r,1,...t),r+=t.length-1}}return e}(u);return w}function w(t,r,n){let i=0,o=0;const s=t.filter((e=>{const[t]=e;return"delimiter"!==t&&"separator"!==t})).length;let p=0;function f(){if(o>e)throw new Error("表达式嵌套深度过大，可能存在无限递归")}function u(e,t,r){return p++,{value:e,args:t,type:r}}function g(){if(i>=t.length)throw new Error("意外的表达式结束");const[e,r]=t[i];switch(i++,e){case"function":return function(e){d("(");const r=[];for(;i<t.length&&("delimiter"!==t[i][0]||")"!==t[i][1]);)r.push(l(0)),"separator"===t[i][0]&&i++;return d(")"),u(e,r,"function")}(r);case"constant":case"identifier":case"string":return u(r,[],e);case"delimiter":if("("===r){const e=l(0);return d(")"),e}throw new Error(`意外的定界符: ${r}`);default:throw new Error(`意外的token类型: ${e}`)}}function d(e){if(i>=t.length||"delimiter"!==t[i][0]||t[i][1]!==e)throw new Error(`期望定界符 "${e}"`);i++}function l(e=0){o++,f();let r=function(){if(o++,f(),i>=t.length)throw new Error("意外的表达式结束");const[e,r]=t[i];if("operator"===e&&a[r]&&"prefix"===a[r].position){i++;const e=l(a[r].precedence);return o--,u(r,[e],"operator")}return o--,g()}(e);for(;i<t.length;){const[n,o]=t[i];if("operator"===n&&"%"===o){const e=t[i+1],n=e&&("string"===e[0]||"constant"===e[0]||"function"===e[0]||"delimiter"===e[0]&&"("===e[1]);if(i++,n){r=u("%",[r,l(a["%"].precedence+1)],"operator")}else r=u("unary%",[r],"operator");continue}if("operator"===n&&a[o]&&"postfix"===a[o].position){if(a[o].precedence<e)break;i++,r=u(o,[r],"operator");continue}if("operator"!==n||!a[o]||a[o].precedence<e||"infix"!==a[o].position)break;i++;const s=a[o];r=u(o,[r,l(s.isCompoundAssignment?s.precedence:s.precedence+1)],"operator")}return o--,r}const m=l();if(p<s)throw new Error(`解析错误：AST节点不全(${p} < ${s})`);return function t(r,n=0){if(n>e)throw new Error("自引用检查嵌套深度过大，可能存在无限递归");if("function"===r.type){const e=r.value;if(c[e]&&c[e].preventSelfReference&&r.args.some((t=>"function"===t.type&&t.value===e)))throw new Error(`函数 ${e} 不能直接作用在自己身上`)}else if("operator"===r.type){const e=r.value;if(a[e]&&a[e].preventSelfReference&&r.args.some((t=>"operator"===t.type&&t.value===e)))throw new Error(`运算符 ${e} 不能直接作用在自己身上`)}r.args?.forEach((e=>t(e,n+1)))}(m),m}function y(e,t,r,i){return t?e:e.map((e=>n.toNumber(e)))}function S(r,o,s,p,f=0){if(f>e)throw new Error("表达式求值嵌套深度过大，可能存在无限递归");if(!r)return 0;if("string"===r.type)return t.has(r.value)?t.get(r.value):n.toNumber(r.value);if("identifier"===r.type)return t.has(r.value)?t.get(r.value):r.value;if("constant"===r.type)return i[r.value];const u=r.args.map((e=>S(e,o,s,p,f+1)));if("operator"===r.type){const e=a[r.value];if(void 0!==e.args&&u.length!==e.args)throw new Error(`运算符 "${r.value}" 需要 ${e.args} 个参数，但得到了 ${u.length} 个`);if(e.isCompoundAssignment){const[n,i]=r.args;if("identifier"!==n.type&&"string"!==n.type)throw new Error("赋值运算符左侧必须是变量名");!function(e,t,r,n){if(!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(e)){if(/\s/.test(e))throw new Error(`变量名 "${e}" 不能包含空格`);throw new Error(`变量名 "${e}" 格式不正确，只能包含字母、数字和下划线，且不以数字开头`)}if(e.startsWith("_cc_"))throw new Error('变量名不能以 "_cc_" 开头，这是系统保留的前缀');if(t.hasOwnProperty(e))throw new Error(`变量名 "${e}" 与运算符冲突`);if(r.hasOwnProperty(e))throw new Error(`变量名 "${e}" 与函数名冲突`);if(n.hasOwnProperty(e))throw new Error(`变量名 "${e}" 与常量冲突`);if(["if","else","true","false","null","undefined"].includes(e))throw new Error(`变量名 "${e}" 是保留字`)}(n.value,o,s,p);const a=S(i,o,s,p,f+1);if("="===r.value)return t.set(n.value,a),d(`添加变量 ${n.value}: ${a}`),"x"===n.value&&g("将无法使用x做为乘法符号"),a;{if(!t.has(n.value))throw new Error(`变量 "${n.value}" 未定义`);const r=t.get(n.value),i=e.func(r,a);return t.set(n.value,i),i}}const n=y(u,e.acceptAny,r.args,r.value);return e.func(...n)}if("function"===r.type){const e=c[r.value];if(void 0!==e.args)if(-1===e.args){if(0===u.length)throw new Error(`函数 "${r.value}" 至少需要1个参数`)}else if(u.length!==e.args)throw new Error(`函数 "${r.value}" 需要 ${e.args} 个参数，但得到了 ${u.length} 个`);const t=y(u,e.acceptAny,r.args,r.value);return e.func(...t)}throw new Error(`未处理的节点类型: ${r.type}`)}return{calculate(e){l();const t=new Set(Object.keys(a)),o=new Set(Object.keys(c)),s=new Set(Object.keys(i)),{expr:p,operators:f}=m(e,t),y=w(h(p,f,o,s)),b=function(e,t){if("object"==typeof(e=n.formatToDisplayString(e))&&null!==e&&(e.info&&d(e.info),e.warning&&g(e.warning),e=e.value),!t)return{value:e,info:u.length>0?u:null,warning:r.length>0?r:null};try{let n,i=t;if("operator"===i.type&&"="===i.value&&(i=i.args[1]),"function"===i.type&&c[i.value]?n=c[i.value].repr:"operator"===i.type&&a[i.value]&&(n=a[i.value].repr),"function"==typeof n)try{const t=n(e);void 0!==t&&d(t)}catch(e){throw new Error(`格式化输出时发生错误: ${e.message}`)}return{value:e,info:u.length>0?u:null,warning:r.length>0?r:null}}catch(t){return g(`格式化输出时发生错误: ${t.message}`),{value:e,info:u.length>0?u:null,warning:r.length>0?r:null}}}(S(y,t,o,s),y);return b},getASTNode(e){const t=new Set(Object.keys(a)),r=new Set(Object.keys(c)),n=new Set(Object.keys(i)),{expr:o,operators:s}=m(e,t);return w(h(o,s,r,n))},getCfg:()=>({operators:new Set(Object.keys(a)),functions:new Set(Object.keys(c)),constants:new Set(Object.keys(i))}),tokenize:(e,t,r,n)=>h(e,t,r,n),preprocess:(e,t,r,n)=>m(e,t),getAllVariables:()=>Object.fromEntries(t),clearAllCache(){t.clear(),l()}}}();export{i as CONSTANTS,u as Calculator,c as FUNCTIONS,a as OPERATORS};
